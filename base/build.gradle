apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.android.support:design:28.0.0'
    api 'com.android.support.constraint:constraint-layout:1.1.3'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    testImplementation 'junit:junit:4.12'
    api project(':AnnotationCompiler')
    annotationProcessor  project(':AnnotationCompiler')
//    api('com.alibaba:arouter-api:1.2.1.1',{
//        exclude group: 'com.android.support', module: 'support-v7'
//        exclude group: 'com.android.support', module: 'support-compat'
//    })
//    annotationProcessor('com.alibaba:arouter-compiler:1.1.2.1',{
//        exclude group: 'com.android.support', module: 'support-v7'
//        exclude group: 'com.android.support', module: 'support-compat'
//    })
}
